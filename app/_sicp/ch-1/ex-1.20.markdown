---
chapterName: "Building Abstractions with Procedures"
sectionName: "Procedures and the Processes They Generate"
chapter: 1
solution: "1.20"
order: "020"
date: 2016-04-01
---

Process generated by *normal order evaluation* for computing `(gcd 206 40)` is:

{% highlight racket linenos %}

(gcd 206 40)

; expanding this will result in:

(if (= 40 0) 
    a 
    (gcd 40 
         (remainder 206 40)
    )
)
 
; after evaluating if as described in book

(gcd 40 
     (remainder 206 40)
)

; expanding

(if (= 
        (remainder 206 40) 
        0
    ) 
    40 
    (gcd 
        (remainder 206 40) 
        (remainder 40 
                   (remainder 206 40)
        )
    )
)

; note that here remainder will be called once in the if predicate. 
; Total calls: 1

(if (= 6 0) 
    40 
    (gcd 
        (remainder 206 40) 
        (remainder 40 
                   (remainder 206 40)
        )
    )
)

; after evaluating if

(gcd (remainder 206 40) (remainder 40 (remainder 206 40)))

; expanding

(if (= 
        (remainder 40 
                   (remainder 206 40)
        ) 
        0
    ) 
    (remainder 206 40) 
    (gcd 
        (remainder 40 
                   (remainder 206 40)
        ) 
        (remainder 
                   (remainder 206 40) 
                   (remainder 40 
                              (remainder 206 40)
                   )
        )
    )
)

; after evaluating if predicate. note that remainder is called 2 times. 
; Total calls: 1 + 2 = 3

(if (= 
        4
        0
    ) 
    (remainder 206 40) 
    (gcd 
        (remainder 40 
                   (remainder 206 40)
        ) 
        (remainder 
                   (remainder 206 40) 
                   (remainder 40 
                              (remainder 206 40)
                   )
        )
    )
)

; after evaluating if

(gcd 
    (remainder 40 
               (remainder 206 40)
    ) 
    (remainder 
               (remainder 206 40) 
               (remainder 40 
                          (remainder 206 40)
               )
    )
)

; expanding 

(if (= 
      (remainder 
             (remainder 206 40) 
             (remainder 40 
                        (remainder 206 40)
             )
      )  
      0
    )
    (remainder 40 
               (remainder 206 40)
    ) 
    (gcd
         (remainder 
                   (remainder 206 40) 
                   (remainder 40 
                              (remainder 206 40)
                   )
         )
         (remainder
                  (remainder 40 
                        (remainder 206 40)
                  )
                  (remainder 
                            (remainder 206 40) 
                            (remainder 40 
                                       (remainder 206 40)
                  )
         )  
    )     
)

; now computing if predicate. note that remainder is called 4 times here.
; total calls: 3+4 = 7

(if (= 
      2  
      0
    )
    (remainder 40 
               (remainder 206 40)
    ) 
    (gcd
         (remainder 
                   (remainder 206 40) 
                   (remainder 40 
                              (remainder 206 40)
                   )
         )
         (remainder
                  (remainder 40 
                        (remainder 206 40)
                  )
                  (remainder 
                            (remainder 206 40) 
                            (remainder 40 
                                       (remainder 206 40)
                  )
         )  
    )     
)

; after evaluating if

(gcd
     (remainder 
               (remainder 206 40) 
               (remainder 40 
                          (remainder 206 40)
               )
     )
     (remainder
              (remainder 40 
                    (remainder 206 40)
              )
              (remainder 
                        (remainder 206 40) 
                        (remainder 40 
                                   (remainder 206 40)
              )
     )  
)     

; expanding

(if (=
      (remainder
               (remainder 40 
                     (remainder 206 40)
               )
               (remainder 
                         (remainder 206 40) 
                         (remainder 40 
                                    (remainder 206 40)
               )
      )  
      0
    )    
    (remainder 
              (remainder 206 40) 
              (remainder 40 
                         (remainder 206 40)
              )
    )
    (gcd 
        (remainder
              (remainder 40 
                    (remainder 206 40)
              )
              (remainder 
                        (remainder 206 40) 
                        (remainder 40 
                                   (remainder 206 40)
              )
        )  
        (remainder
             (remainder 
                       (remainder 206 40) 
                       (remainder 40 
                                  (remainder 206 40)
                       )
             )
             (remainder
                      (remainder 40 
                            (remainder 206 40)
                      )
                      (remainder 
                                (remainder 206 40) 
                                (remainder 40 
                                           (remainder 206 40)
                      )
             )  
        )                
    )
)
    
; evaluating if predicate. note that here remainder is called 7 times.
; total calls 7+7 = 14
    
(if (=
      0  
      0
    )    
    (remainder 
              (remainder 206 40) 
              (remainder 40 
                         (remainder 206 40)
              )
    )
    (gcd 
        (remainder
              (remainder 40 
                    (remainder 206 40)
              )
              (remainder 
                        (remainder 206 40) 
                        (remainder 40 
                                   (remainder 206 40)
              )
        )  
        (remainder
             (remainder 
                       (remainder 206 40) 
                       (remainder 40 
                                  (remainder 206 40)
                       )
             )
             (remainder
                      (remainder 40 
                            (remainder 206 40)
                      )
                      (remainder 
                                (remainder 206 40) 
                                (remainder 40 
                                           (remainder 206 40)
                      )
             )  
        )                
    )
)

; after evaluating if we get
    
(remainder 
          (remainder 206 40) 
          (remainder 40 
                     (remainder 206 40)
          )
)
    
; evaluating above calls remainder 4 times. we get:
; total calls 14+4 = 18

2

{% endhighlight %}

Process generated by *applicative order evaluation* for computing `(gcd 206 40)` is:

{% highlight racket linenos %}

(gcd 206 40)
(gcd 40 (remainder 206 40))
(gcd 40 6)
(gcd 6 (remainder 40 6))
(gcd 6 4)
(gcd 4 (remainder 6 4))
(gcd 4 2)
(gcd 2 (remainder 4 2))
(gcd 2 0)
2

{% endhighlight %}

As we can see in the above process, `remainder` is called $$ 4 $$ times.


